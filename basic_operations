#include<stdio.h>
void matrix_input1(int A[3][3]);
void matrix_input2(int B[3][3]);
void add(int A[3][3],int B[3][3],int C[3][3]);
void subtract(int A[3][3],int B[3][3],int D[3][3]);
void output(int C[3][3],int D[3][3],int E[3][3]);
void additionofdiagonal(int A[3][3]);
void transposeA(int A[3][3]);
void multiplyAB(int A[3][3],int B[3][3],int E[3][3]);
void add_row_elem(int A[3][3]);
void check_identity(int A[3][3]);
void main()
{
	int A[3][3],B[3][3],C[3][3],D[3][3],E[3][3];
	
	matrix_input1(A);
	matrix_input2(B);
	
	add(A,B,C);
	subtract(A,B,D);
	additionofdiagonal(A);
	transposeA(A);
	multiplyAB(A,B,E);
	add_row_elem(A);
	check_identity(A);
	
	output(C,D,E);
}

void matrix_input1(int A[3][3])
{
	int i,j;

	for(i=1;i<=3;i++)
	{
		for(j=1;j<=3;j++)
		{
			printf("Enter A[%d][%d]:",i,j);
			scanf("%d",&A[i][j]);
		}
		printf("\n");
	}
}

void check_identity(int A[3][3])
{
	int i,j,flag=1;
	
	for(i=1;i<3;i++)
	{
		for(j=1;j<3;j++)
		{
			if(A[i][j]!=1 && A[j][i]!=0)
			{
				flag=0;
				break;
			}
		}
	}
	
	if(flag==1)
	{
		printf("\nIt is an identity matrix: \n");
	}
	else
	{
		printf("\nIt is not an identity matrix: \n");
	}
}

void matrix_input2(int B[3][3])
{
	int i,j;
	
	for(i=1;i<=3;i++)
	{
		for(j=1;j<=3;j++)
		{
			printf("Enter B[%d][%d]:",i,j);
			scanf("%d",&B[i][j]);
		}
	}

}

void add(int A[3][3],int B[3][3],int C[3][3])
{
	int i,j;
	for(i=1;i<=3;i++)
	{
		for(j=1;j<=3;j++)
		{
			C[i][j]=A[i][j] + B[i][j];
		}
	}
}

void subtract(int A[3][3],int B[3][3],int D[3][3])
{
	int i,j;
	for(i=1;i<=3;i++)
	{
		for(j=1;j<=3;j++)
		{
			D[i][j]=A[i][j] - B[i][j];
		}
	}
}

void add_row_elem(int A[3][3])
{
	int i,sum=0,n;
	
	printf("\nEnter row number:");
	scanf("%d",&n);
	
    for(i=0;i<=n;i++)
	{
		sum=sum+A[n][i];
	}
	
	printf("Sum of respective row elements=%d",sum);
}

void additionofdiagonal(int A[3][3])
{
	int i,j,sum=0;
	
	for(i=1;i<=3;i++)
	{
		for(j=1;j<=3;j++)
		{
			if(i==j)
			{
				sum=sum+A[i][j];
			}
		}
	}
	printf("\nSum of respective diagonal elements of matrix A =%d\n",sum);
}

void transposeA(int A[3][3])
{
	int x,y;
	printf("\nTranspose of matrix A gives result:\n");
	for(x=1;x<=3;x++)
	{
		for(y=1;y<=3;y++)
		{
			printf("%d\t",A[y][x]);
		}
		printf("\n");
	}
}

void multiplyAB(int A[3][3],int B[3][3],int E[3][3])
{
	int i,j,k,sum=0;
	
	printf("\nMultiplication of matrices A and B gives:\n");
	
	for(i=1;i<=3;i++)
	{
		for(j=1;j<=3;j++)
		{
			sum=0;
			for(k=1;k<=3;k++)
			{
				sum=sum+(A[i][k]*B[k][j]);
			}
			E[i][j]=sum;
		}
	}
	
	for(i=1;i<=3;i++)
	{
		for(j=1;j<=3;j++)
	   {
		   printf("%d\t",E[i][j]);
	   }
	   printf("\n");
	}
}



void output(int C[3][3],int D[3][3],int E[3][3])
{
	int i,j,k,sum1;
	printf("\n");
	printf("\nAddition of matrices A and B gives result:\n");
	for(i=1;i<=3;i++)
	{
		for(j=1;j<=3;j++)
		{
			printf("%d\t",C[i][j]);
		}
		printf("\n");
	}
	printf("\n");
	printf("\nSubtraction of matrices A and B gives result:\n");
	for(i=1;i<=3;i++)
	{
		for(j=1;j<=3;j++)
		{
			printf("%d\t",D[i][j]);
		}
		printf("\n");
	}
	
	
}

